//
//  HomeInteractor.swift
//  RealTimeChat
//
//  Created by Manuel Salvador del Águila on 16/06/2019.
//  Copyright (c) 2019 Manuel Salvador del Águila. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func doSomething(request: Home.Something.Request)
    func checkIfUserIsLoggedIn(request: Home.IsUserLoggedIn.Request)
    func logoutUser(request: Home.LogoutUser.Request)
    func getCurrentUser(request: Home.GetCurrentUserLoggedIn.Request)
    func loadMessages(request: Home.LoadHomeMessages.Request)
}

protocol HomeDataStore
{
    //var name: String { get set }
    var currentUser: UserClass? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var currentUser: UserClass?
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Home.Something.Request)
    {
        worker = HomeWorker()
        worker?.doSomeWork()
        
        let response = Home.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func checkIfUserIsLoggedIn(request: Home.IsUserLoggedIn.Request) {
        worker = HomeWorker()
        worker?.checkIfUserIsLoggedIn(isLogged: { isLoggedIn in
            let response = Home.IsUserLoggedIn.Response(isLogged: isLoggedIn)
            self.presenter?.isUserLoggedIn(response: response)
        })
    }
    
    func logoutUser(request: Home.LogoutUser.Request) {
        worker = HomeWorker()
        worker?.logoutUser {
            
            let response = Home.LogoutUser.Response()
            self.presenter?.logoutUser(response: response)
        }
    }
    
    func getCurrentUser(request: Home.GetCurrentUserLoggedIn.Request) {
        worker = HomeWorker()
        worker?.getCurrentUser(completion: { (user) in
            let response = Home.GetCurrentUserLoggedIn.Response(user: user)
            self.currentUser = response.user
            self.presenter?.getCurrentUser(response: response)
        })
    }
    
    func loadMessages(request: Home.LoadHomeMessages.Request) {
        worker = HomeWorker()
        worker?.loadAllMessages(completion: { (messages) in
            let response = Home.LoadHomeMessages.Response(messages: messages)
            self.presenter?.loadMessages(response: response)
        })
    }
}
