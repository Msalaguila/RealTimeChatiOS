//
//  NewMessageInteractor.swift
//  RealTimeChat
//
//  Created by Manuel Salvador del Águila on 17/06/2019.
//  Copyright (c) 2019 Manuel Salvador del Águila. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewMessageBusinessLogic
{
    func doSomething(request: NewMessage.Something.Request)
    func loadUsers(request: NewMessage.LoadAvailableUsers.Request)
}

protocol NewMessageDataStore
{
    //var name: String { get set }
}

class NewMessageInteractor: NewMessageBusinessLogic, NewMessageDataStore
{
    var presenter: NewMessagePresentationLogic?
    var worker: NewMessageWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: NewMessage.Something.Request)
    {
        worker = NewMessageWorker()
        worker?.doSomeWork()
        
        let response = NewMessage.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func loadUsers(request: NewMessage.LoadAvailableUsers.Request) {
        worker = NewMessageWorker()
        worker?.loadUsers(completion: { (users) in
            let response = NewMessage.LoadAvailableUsers.Response(users: users)
            self.presenter?.presentUsersLoaded(response: response)
        })
    }
}
