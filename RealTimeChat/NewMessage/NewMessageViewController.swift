//
//  NewMessageViewController.swift
//  RealTimeChat
//
//  Created by Manuel Salvador del Águila on 17/06/2019.
//  Copyright (c) 2019 Manuel Salvador del Águila. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewMessageDisplayLogic: class
{
    func displaySomething(viewModel: NewMessage.Something.ViewModel)
    func displayLoadedUsers(viewModel: NewMessage.LoadAvailableUsers.ViewModel)
}

class NewMessageViewController: UIViewController, NewMessageDisplayLogic
{
    var interactor: NewMessageBusinessLogic?
    var router: (NSObjectProtocol & NewMessageRoutingLogic & NewMessageDataPassing)?

    var mainView = NewMessageView()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = NewMessageInteractor()
        let presenter = NewMessagePresenter()
        let router = NewMessageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    func setUpNavBar() {
        navigationController?.navigationBar.isHidden = false
        navigationItem.leftBarButtonItem = UIBarButtonItem(title: "Cancel", style: .plain, target: self, action: #selector(cancelButtonPressed))
        navigationItem.title = "New Message"
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        view = mainView
        setUpNavBar()
        doSomething()
        loadAvailableUsers()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = NewMessage.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: NewMessage.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    func loadAvailableUsers() {
        let request = NewMessage.LoadAvailableUsers.Request()
        interactor?.loadUsers(request: request)
    }
    
    // MARK: Events
    @objc func cancelButtonPressed() {
        dismiss(animated: true, completion: nil)
    }
    
    // MARK: Event replies
    
    func displayLoadedUsers(viewModel: NewMessage.LoadAvailableUsers.ViewModel) {
        let users = viewModel.users
        mainView.usersLoaded = users
        mainView.tableView.reloadData()
    }
    
}
